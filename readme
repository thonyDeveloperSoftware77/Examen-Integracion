# Plataforma Integrada de Servicios Estudiantiles

## Descripción

Este proyecto implementa una plataforma integrada para atender solicitudes académicas de estudiantes (certificados, legalizaciones, homologaciones y equivalencias), integrando tres sistemas independientes:

- Sistema Académico (microservicio REST: `SolicitudService`)
- Sistema de Certificación (servicio SOAP simulado: `SOAPClientService`)
- Sistema de Seguridad y Roles (autenticación con tokens JWT)

El proyecto utiliza Kubernetes (Minikube) con Istio Service Mesh para resiliencia y monitoreo, y Kong como API Gateway para seguridad y gestión de tráfico.

---

## Arquitectura

- **Microservicios**:  
  - `SolicitudService`: Microservicio REST con endpoints `POST /solicitudes` y `GET /solicitudes/{id}`, valida JWT, y llama al servicio SOAP simulado para registrar certificaciones.  
  - `SOAPClientService`: Simulación REST del sistema SOAP externo que responde con estados (`procesado`, `en revisión`, `rechazado`).

- **API Gateway (Kong)**:  
  Gestiona la autenticación JWT, aplica rate limiting y enruta las solicitudes a los microservicios.

- **Istio Service Mesh**:  
  Implementa mTLS, circuit breaking, retries, y permite monitoreo y trazabilidad.

- **Monitoreo**:  
  Integración con Prometheus, Jaeger y Kiali para métricas, trazas distribuidas y visualización.

---

## Requisitos previos

- Docker instalado  
- Minikube instalado y configurado  
- kubectl instalado y configurado para Minikube  
- Helm instalado (para instalar Kong)  
- Node.js con Bun (para desarrollo local, opcional)

---

## Cómo desplegar

### 1. Construir imágenes Docker para Minikube

```bash
eval $(minikube docker-env)
docker build -t solicitud-service:latest ./solicitud-service
docker build -t soapclient-service:latest ./soapclient-service
